<chapter id="Getting_and_Building">
  <title>Getting or Building GPSBabel</title>
<sect1 id="Download">
<title>Downloading - the easy way</title>
  <para>
GPSBabel is distributed "ready to run" on most common
operating systems via the
<ulink url="http://www.gpsbabel.org/download.html">official GPSBabel download</ulink> page.
</para>
  <para> As GPSBabel runs on a wide variety of operating systems,
be sure to visit the
<ulink url="http://www.gpsbabel.org/osnotes.html">OS-Specific notes</ulink> for
additional information.
</para>
</sect1>
<sect1 id="Source">
<title>Building from source.</title>
  <para>
Most people will not have to build GPSBabel as we provide builds for MacOS
(formerly Mac OS/X) and Windows. If you are a developer, need access to a change
that's been committed but not released, or are using an operating
system where no binary is provided, you will have to build it from
source.  The source code should be compilable on any system with
ISO C++11. It's tested on Linux, MacOS and Windows cross compilers.
Less frequently, someone will build on MSVC, FreeBSD, OpenBSD, Solaris,
etc. Both Clang/LLVM and GNU C++ are regularly exercised via automation.
</para>

<para>
  You will need a build environment. In general, configuring that will be
  custom for your computer. Some of these components may be provided with
  your operating system, perhaps as optional packages, and some will have
  to be downloaded. <ulink url="http://qt-project.org">Qt</ulink>
is required for all builds.  Mac and Windows users can download
binaries from <ulink url="http://qt-project.org/downloads">Qt Downloads</ulink>
Fedora or CentOS users may need to 'yum install qt-devel'.  Optionally, use qt5-base.  When in doubt, 'yum search qt' or 'yum search qt5' can help you find the correct package name
Ubuntu users may need to 'apt-get install libqt5-core libqt5-dev'.
Qt versions 5.2 and newer are supported.
</para>
  <para>To build the Garmin USB support, <ulink url="http://libusb.sourceforge.net">libusb</ulink>
is required for Linux or other UNIX-like systems.
Fedora users find this via 'yum install libusb-devel'.  Ubuntu users may
need to 'yum install libusb-dev'. We provide a modified version for MacOS.
</para>
</para>



<para>
  The next step is to actually get the source code. The most recent and tested release, available
  from the <ulink url="http://www.gpsbabel.org/download.html">GPSBabel download page</ulink>
  </para>
  <para>If you're doing any development, you'll find that working from the <ulink url="https://github.com/gpsbabel/gpsbabel">GPSBabel Github repo</ulink> is easier and is required for sending us changes. Checkouts vis Git, HTTPS, SSH, and Subversion are supported.
</para>

<para>
  There are two approaches to building. Users comfortable with "old-school" UNIXy open-source development will likely prefer to run
  "./configure &amp;&amp; make". Others may prefer to use the (pretty awesome)
  Qt Creator to open the .pro files and use the IDE and debugger that are
  part of Qt. As a hybrid approach, you can use the Qt .pro files and build
  from the command line by running "qmake &amp;&amp; make".
</para>
<para>In all cases, the GUI
  is built separately from the gui/directory and is buildable only via the
  Qt approach.
</para>



<para>
  In most cases, the code is as simple to build as running:
</para>
<para><userinput> ./configure &amp;&amp; make</userinput></para>
  <para>
<para>There are additional flags that can be passed to configure to
 customize your build of GPSBabel.
</para>
<para><userinput>./configure --help</userinput></para>
<para>
lists all the supported options, but of interest we have:</para><para>
 <option>--disable-shapefile</option> Excludes the shapefile support.
</para>
<para>
  <option>--disable-csv</option> Excludes all support for our something-separated formats.
</para>
<para>
  <option>--disable-filters</option> Excludes all filter support.
</para>
<para>
  <option>--enable-efence</option> Activate debugging mode for gpsbabel-debug.
</para>
<para>
  <option>--with-doc=</option><filename class="directory">dir</filename> Specifies that the doc should be created and installed in <filename class="directory">dir</filename>.
</para>
<para>
  <option>--without-libusb</option> Disables use of libusb, even it's it's available.
</para>
<para>
 <option>--with-zlib=(included)|system|no</option> By default, we use our own version of zlib. If you specify <option>system</option> the system zlib is used.  A value of <option>no</option> (or --without-zlib) disables zlib.
</para>
</sect1>
</chapter>
